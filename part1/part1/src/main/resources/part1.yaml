openapi: 3.0.3
info:
  title: Hospital Management API
  description: API for managing patients, doctors, appointments, and medical records.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /patients:
    get:
      summary: List all patients
      responses:
        '200':
          description: Successfully retrieved the list of patients
        '400':
          description: Bad request
    post:
      summary: Create a new patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          description: Patient created successfully
        '400':
          description: Bad request
  /patients/{id}:
    get:
      summary: Retrieve a specific patient by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Patient retrieved successfully
        '404':
          description: Patient not found
    put:
      summary: Update a specific patient by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Patient updated successfully
        '400':
          description: Bad request
        '404':
          description: Patient not found
    delete:
      summary: Delete a specific patient by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Patient deleted successfully
        '404':
          description: Patient not found
  /patients/{id}/appointments:
    get:
      summary: List all appointments for a specific patient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of appointments retrieved successfully
        '404':
          description: Patient not found
  /patients/{id}/medical-records:
    get:
      summary: List all medical records for a specific patient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of medical records retrieved successfully
        '404':
          description: Patient not found
  /doctors:
    get:
      summary: List all doctors
      responses:
        '200':
          description: Successfully retrieved the list of doctors
        '400':
          description: Bad request
    post:
      summary: Create a new doctor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '201':
          description: Doctor created successfully
        '400':
          description: Bad request
  /doctors/{id}:
    get:
      summary: Retrieve a specific doctor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Doctor retrieved successfully
        '404':
          description: Doctor not found
    put:
      summary: Update a specific doctor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          description: Doctor updated successfully
        '400':
          description: Bad request
        '404':
          description: Doctor not found
    delete:
      summary: Delete a specific doctor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Doctor deleted successfully
        '404':
          description: Doctor not found
  /doctors/{id}/appointments:
    get:
      summary: List all appointments for a specific doctor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of appointments retrieved successfully
        '404':
          description: Doctor not found
  /appointments:
    get:
      summary: List all appointments
      responses:
        '200':
          description: Successfully retrieved the list of appointments
        '400':
          description: Bad request
    post:
      summary: Create a new appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '201':
          description: Appointment created successfully
        '400':
          description: Bad request
  /appointments/{id}:
    get:
      summary: Retrieve a specific appointment by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Appointment retrieved successfully
        '404':
          description: Appointment not found
    put:
      summary: Update a specific appointment by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: Appointment updated successfully
        '400':
          description: Bad request
        '404':
          description: Appointment not found
    delete:
      summary: Delete a specific appointment by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Appointment deleted successfully
        '404':
          description: Appointment not found
  /appointments/{id}/medical-record:
    get:
      summary: Retrieve the medical record for a specific appointment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Medical record retrieved successfully
        '404':
          description: Medical record not found
  /medical-records:
    post:
      summary: Create a new medical record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
      responses:
        '201':
          description: Medical record created successfully
        '400':
          description: Bad request
components:
  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
    Doctor:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        specialisation:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    Appointment:
      type: object
      properties:
        id:
          type: integer
        appointmentDate:
          type: string
          format: date-time
        status:
          type: string
        notes:
          type: string
    MedicalRecord:
      type: object
      properties:
        id:
          type: integer
        recordDate:
          type: string
          format: date-time
        diagnosis:
          type: string
        treatment:
          type: string
        notes:
          type: string
